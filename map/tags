!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
G	Makefile	/^G = gcc -Wall -Wextra -Werror$/;"	m
MAP_H	map.h	/^# define MAP_H$/;"	d
NAME	Makefile	/^NAME = map.a$/;"	m
O	Makefile	/^O = ${SRC:.c=.o}$/;"	m
SRC	Makefile	/^SRC = map.c \\$/;"	m
add_double_pointer	map.c	/^void			add_double_pointer(char **ptr)$/;"	f
check_map	map.c	/^static int		check_map(const char **strings)$/;"	f	file:
crgb	map.h	/^	int		crgb[3];$/;"	m	struct:s_map
ea	map.h	/^	char	*ea;$/;"	m	struct:s_map
fill_c	fill_map_second.c	/^void		fill_c(t_map *map, const char **strings)$/;"	f
fill_ea	fill_map_second.c	/^void		fill_ea(t_map *map, const char **strings)$/;"	f
fill_f	fill_map_second.c	/^void		fill_f(t_map *map, const char **strings)$/;"	f
fill_map	fill_map_third.c	/^void		fill_map(t_map *map, const char **strings)$/;"	f
fill_no	fill_map_first.c	/^void	fill_no(t_map *map, const char **strings)$/;"	f
fill_r	fill_map_first.c	/^void	fill_r(t_map *map, const char **strings)$/;"	f
fill_s	fill_map_second.c	/^void		fill_s(t_map *map, const char **strings)$/;"	f
fill_so	fill_map_first.c	/^void	fill_so(t_map *map, const char **strings)$/;"	f
fill_we	fill_map_first.c	/^void	fill_we(t_map *map, const char **strings)$/;"	f
frgb	map.h	/^	int		frgb[3];$/;"	m	struct:s_map
height	map.h	/^	int		height;$/;"	m	struct:s_map
map_width	map.h	/^	int		map_width;$/;"	m	struct:s_map
maparr	map.h	/^	char	*maparr;$/;"	m	struct:s_map
new_map	map.c	/^static t_map	*new_map(void)$/;"	f	file:
no	map.h	/^	char	*no;$/;"	m	struct:s_map
read_map	map.c	/^t_map			*read_map(const char *file_name)$/;"	f
rgbstr_to_rgbint	fill_map_second.c	/^static void	rgbstr_to_rgbint(int *rgbint, char *rgbstr)$/;"	f	file:
s	map.h	/^	char	*s;$/;"	m	struct:s_map
s_map	map.h	/^typedef struct	s_map$/;"	s
so	map.h	/^	char	*so;$/;"	m	struct:s_map
t_map	map.h	/^}				t_map;$/;"	t	typeref:struct:s_map
we	map.h	/^	char	*we;$/;"	m	struct:s_map
width	map.h	/^	int		width;$/;"	m	struct:s_map
xfree_double_pointer	map.c	/^void			xfree_double_pointer(char **ptr)$/;"	f
