!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
CC	Makefile	/^CC = gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS = -Wall -Wextra -Werror$/;"	m
FALSE	libft.h	/^# define FALSE /;"	d
LIBFT_H	libft.h	/^# define LIBFT_H$/;"	d
NAME	Makefile	/^NAME = libft.a$/;"	m
OBJ	Makefile	/^OBJ = ${SRC:.c=.o}$/;"	m
SRC	Makefile	/^SRC = ft_atoi.c \\$/;"	m
TRUE	libft.h	/^# define TRUE /;"	d
check_equality	ft_strnstr.c	/^static int	check_equality(const char *h, const char *n, int i)$/;"	f	file:
check_equality	ft_strstr.c	/^static int	check_equality(const char *h, const char *n, int i)$/;"	f	file:
count_char	count_char.c	/^int		count_char(const char *s, char c)$/;"	f
count_words	ft_split.c	/^static	int		count_words(char const *s, char c)$/;"	f	file:
ft_atoi	ft_atoi.c	/^int		ft_atoi(const char *str)$/;"	f
ft_bzero	ft_bzero.c	/^void	ft_bzero(void *s, size_t n)$/;"	f
ft_calloc	ft_calloc.c	/^void	*ft_calloc(size_t count, size_t size)$/;"	f
ft_dec2hex	ft_dec2hex.c	/^char		*ft_dec2hex(size_t decimal)$/;"	f
ft_isalnum	ft_isalnum.c	/^int		ft_isalnum(int c)$/;"	f
ft_isalpha	ft_isalpha.c	/^int		ft_isalpha(int c)$/;"	f
ft_isascii	ft_isascii.c	/^int		ft_isascii(int c)$/;"	f
ft_isdigit	ft_isdigit.c	/^int		ft_isdigit(int c)$/;"	f
ft_isprint	ft_isprint.c	/^int		ft_isprint(int c)$/;"	f
ft_itoa	ft_itoa.c	/^char		*ft_itoa(long n)$/;"	f
ft_memccpy	ft_memccpy.c	/^void	*ft_memccpy(void *dst, const void *src, int c, size_t n)$/;"	f
ft_memchr	ft_memchr.c	/^void	*ft_memchr(const void *s, int c, size_t n)$/;"	f
ft_memcmp	ft_memcmp.c	/^int		ft_memcmp(const void *s1, const void *s2, size_t n)$/;"	f
ft_memcpy	ft_memcpy.c	/^void	*ft_memcpy(void *dst, const void *src, size_t n)$/;"	f
ft_memmove	ft_memmove.c	/^void	*ft_memmove(void *dst, const void *src, size_t len)$/;"	f
ft_memset	ft_memset.c	/^void	*ft_memset(void *b, int c, size_t len)$/;"	f
ft_putchar_fd	ft_putchar_fd.c	/^void	ft_putchar_fd(const char c, int fd)$/;"	f
ft_putendl_fd	ft_putendl_fd.c	/^void	ft_putendl_fd(char *s, int fd)$/;"	f
ft_putnbr_fd	ft_putnbr_fd.c	/^void		ft_putnbr_fd(int n, int fd)$/;"	f
ft_putstr	ft_putstr.c	/^void	ft_putstr(const char *s)$/;"	f
ft_putstr_fd	ft_putstr_fd.c	/^void	ft_putstr_fd(const char *s, int fd)$/;"	f
ft_split	ft_split.c	/^char			**ft_split(char const *s, char c)$/;"	f
ft_strchr	ft_strchr.c	/^char	*ft_strchr(const char *s, int c)$/;"	f
ft_strcmp	ft_strcmp.c	/^int		ft_strcmp(const char *s1, const char *s2)$/;"	f
ft_strdup	ft_strdup.c	/^char	*ft_strdup(const char *s1)$/;"	f
ft_strjoin	ft_strjoin.c	/^char		*ft_strjoin(char const *s1, char const *s2)$/;"	f
ft_strlcat	ft_strlcat.c	/^size_t	ft_strlcat(char *dst, const char *src, size_t size)$/;"	f
ft_strlcpy	ft_strlcpy.c	/^size_t		ft_strlcpy(char *dst, const char *src, size_t size)$/;"	f
ft_strlen	ft_strlen.c	/^size_t	ft_strlen(const char *str)$/;"	f
ft_strmapi	ft_strmapi.c	/^char	*ft_strmapi(char const *s, char (*f) (unsigned int, char))$/;"	f
ft_strncmp	ft_strncmp.c	/^int		ft_strncmp(const char *s1, const char *s2, size_t n)$/;"	f
ft_strnstr	ft_strnstr.c	/^char		*ft_strnstr(const char *h, const char *n, size_t len)$/;"	f
ft_strrchr	ft_strrchr.c	/^char		*ft_strrchr(const char *s, int c)$/;"	f
ft_strrev	ft_dec2hex.c	/^static void	ft_strrev(char *str)$/;"	f	file:
ft_strstr	ft_strstr.c	/^char		*ft_strstr(const char *h, const char *n)$/;"	f
ft_strtoupper	ft_strtoupper.c	/^char		*ft_strtoupper(char *s)$/;"	f
ft_strtrim	ft_strtrim.c	/^char		*ft_strtrim(char const *s1, char const *set)$/;"	f
ft_strtrim_helper	ft_strtrim.c	/^static char	*ft_strtrim_helper(char const *s1, int start, int end)$/;"	f	file:
ft_substr	ft_substr.c	/^char	*ft_substr(char const *s, unsigned int start, size_t len)$/;"	f
ft_tolower	ft_tolower.c	/^int		ft_tolower(int c)$/;"	f
ft_toupper	ft_toupper.c	/^int		ft_toupper(int c)$/;"	f
get_length	ft_split.c	/^static	int		get_length(char const *s, int c, int start)$/;"	f	file:
hexer	ft_dec2hex.c	/^static char	*hexer(int l)$/;"	f	file:
integer_length	ft_putnbr_fd.c	/^static int	integer_length(int nb)$/;"	f	file:
is_set	ft_strtrim.c	/^static int	is_set(char const *set, char c)$/;"	f	file:
is_str_digit	is_str_digit.c	/^int		is_str_digit(const char *s)$/;"	f
length	length.c	/^int		length(char **array)$/;"	f
negative_condition	ft_itoa.c	/^static char	*negative_condition(long n)$/;"	f	file:
norminette_helper	ft_split.c	/^static	char	**norminette_helper(char const *s, char c, char **str, int j)$/;"	f	file:
numlen	ft_itoa.c	/^static long	numlen(long n)$/;"	f	file:
power_ten	ft_putnbr_fd.c	/^static int	power_ten(int power)$/;"	f	file:
str_allocation	ft_split.c	/^static	char	*str_allocation(char const *s, char c, int start)$/;"	f	file:
zero_condition	ft_itoa.c	/^static char	*zero_condition(void)$/;"	f	file:
